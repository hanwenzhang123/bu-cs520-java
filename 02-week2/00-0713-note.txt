method in java
methods are blocks of code that perform a specific function
methods can:
- accept arguments
- perform work
- return results
the access modifier, return type, method name and arguments list comprise the method's signature
if the method does not return a value, its return type must be void
java considers the signature to be true identifier of the method

function - pretty much the same thing but used in different programming languages

What is an object? A discrete entity that can have state and behavior
objects: state and behavior
state - attributes
behavior - a set of methods

example: pen
state: green
behavior: writing

What is OOP?
classes are like blueprints for objects that serve a specific purpose
classes are brought to life as object instances
classes have attributes and methods
methods are invoked by other classes and methods

Constructors
constructors create instances of classes
every class has a constructor 
constructor name must match that of the class

a class can be instantiated using the "new" keyword: 
  Employee employee = new Employee();  //calling that specific constructor
using new causes the target c;ass constructor to run
java will automatically find the right constructor


Instance variable & methods
- instance varibale hold values for each object instance of a class
- they can only be accessed by an object instance of the class (created with new)
- a class is not required to have them
- instance have their own copy of the variables and do not share them
- like any variable, they must be declared, given a specific type and will assume a default value if none is given
- values can change infinitely
- instance methods have same scope as instance variables, can only be called by instance of the class
They are specific to that instance and not marked with the keyword static

static vairbale and methods
- static varibales/methods are conceptually the opposite of instance variables/methods
- using the keyword static allows access without creating instance
- much of the core java library is static, for example java.lang.Math
- share the scope
  
  
Just what is this?
- the keyword this can be prefixed to instance variables and methods to make it clear that they are scoped to the specifc instance
- this refers to the instance copy


References
- in java, variables that represent object instances are references ('pointers') to an item stored in the JVM's memory
- when object instances are passed to methods, it is their reference that is actually being sent; this is called passing by reference

Passing by Value
- priminitives(int, boolean, double) are not really objects
- they do not point to anything, they are their values
- when primitives are passed to methods, a copy of the value itself is passed, this is called passing by value

//constructor with two arguments that pass another constructor with three arguments
public P02_Employee(String name, int startingSalary) {
  this(name, startingSalary, 0.0);  //using only this, and with a default double value, passing to the one with 3 arguments
  }
  
 //constructor with three arguments 
 public P02_Employee(String name, int startingSalary, double timeEmployed) {
  this.name = name;
  this.startingSalary = startingSalary;
  this.timeEmployed = timeEmployed;
  }
