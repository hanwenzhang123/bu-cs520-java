method in java
methods are blocks of code that perform a specific function
methods can:
- accept arguments
- perform work
- return results
the access modifier, return type, method name and arguments list comprise the method's signature
if the method does not return a value, its return type must be void
java considers the signature to be true identifier of the method

function - pretty much the same thing but used in different programming languages

What is an object? A discrete entity that can have state and behavior
objects: state and behavior
state - attributes
behavior - a set of methods

example: pen
state: green
behavior: writing

What is OOP?
classes are like blueprints for objects that serve a specific purpose
classes are brought to life as object instances
classes have attributes and methods
methods are invoked by other classes and methods

Constructors
constructors create instances of classes
every class has a constructor 
constructor name must match that of the class

a class can be instantiated using the "new" keyword: 
  Employee employee = new Employee();  //calling that specific constructor
using new causes the target c;ass constructor to run
java will automatically find the right constructor


Instance variable & methods
- instance varibale hold values for each object instance of a class
- they can only be accessed by an object instance of the class (created with new)
- a class is not required to have them
- instance have their own copy of the variables and do not share them
- like any variable, they must be declared, given a specific type and will assume a default value if none is given

static vairbale and methods
- static varibales/methods are conceptually the opposite of instance variables/methods
- using the keyword static allows access without creating instances
- much of the core java library is static, for example java.lang.Math
  
